<?xml version="1.0"?>
<doc>
<assembly>
<name>
Ateilla Personalization Manager
</name>
</assembly>
<members>
<member name="T:Ateilla_Personalization_Manager.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:Ateilla_Personalization_Manager.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:Ateilla_Personalization_Manager.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="T:Ateilla_Personalization_Manager.ClassDataAccessOleDB">
 <summary>
 Data Access Class for OleDB Queries.
 </summary>
 <remarks>
 Code By : BARON PATRICK T. PAREDES<br/>
 Contact#: 0927-8497119<br/>
 Email   : barspars@yahoo.com<br/>
 Email   : baronpatrick.paredes@gmail.com<br/>
 Date    : December 01, 2009
 </remarks>
</member>
<member name="M:Ateilla_Personalization_Manager.ClassDataAccessOleDB.#ctor(System.String)">
 <summary>
 Constructing New Data Access Object
 </summary>
 <param name="ConnectionString">A Valid OleDB Connection String.</param>
 <remarks>Use connection string generated by a UDL File.</remarks>
 <example>Dim Obj As New ClassDataAccess(ValidConnectionString)</example>
</member>
<member name="P:Ateilla_Personalization_Manager.ClassDataAccessOleDB.Exception">
 <summary>
 Exception Property of the object.
 </summary>
 <returns>Returns the error exception thrown by the object.</returns>
</member>
<member name="P:Ateilla_Personalization_Manager.ClassDataAccessOleDB.DataReader">
 <summary>
 An OleDBbDataReader Object returned after executing a successful execution of a SQL Command.
 </summary>
 <returns>Current OleDbDataReader in object memory.</returns>
</member>
<member name="P:Ateilla_Personalization_Manager.ClassDataAccessOleDB.DataTable">
 <summary>
 A DataTable Object returned after executing a successful execution of a SQL Command.
 </summary>
 <returns>Current DataTable in object memory.</returns>
</member>
<member name="M:Ateilla_Personalization_Manager.ClassDataAccessOleDB.CloseConnection">
 <summary>
 Closes the connection properly.
 </summary>
</member>
<member name="M:Ateilla_Personalization_Manager.ClassDataAccessOleDB.Connect(System.String)">
 <summary>
 Connect using the connection string provided by the constructor.
 </summary>
 <param name="ConnectionString">A Valid OleDB Connection String.</param>
 <returns>True=Connection Success, False=Connection Failed.</returns>
 <example>Obj.Connect(ValidConnectionString)</example>
</member>
<member name="M:Ateilla_Personalization_Manager.ClassDataAccessOleDB.SQL(System.String,Ateilla_Personalization_Manager.ClassDataAccessOleDB.ConnectionType)">
 <summary>
 SQL Function for any SQL Command Syntax.
 </summary>
 <param name="SQLQuery">A Valid SQL Query Command.</param>
 <param name="ConnType"><see>ConnectioType</see></param>
 <returns>True=Command Success, False=Command Failed</returns>
 <example>
 1. Obj.SQL("SELECT * FROM TABLE1",ConnectionType.DataReader)<br></br>
    Returns OleDbDataReader<br></br>
 2. Obj.SQL("DELETE FROM TABLE1", ConnectionType.DataCommand)<br></br>
 3. Obj.SQL("INSERT INTO TABLE1 VALUES('VALUE')", ConnectionType.DataCommand)<br></br>
 4. Obj.SQL("UPDATE TABLE1 SET Field1='VALUE'", ConnectionType.DataCommand)<br></br>
 5. Obj.SQL("SELECT * FROM TABLE1", ConnectionType.DataAdapter)<br></br>
    Returns DataTable
 </example>
</member>
<member name="M:Ateilla_Personalization_Manager.ClassDataAccessOleDB.FillListview(System.Windows.Forms.ListView@,System.String,System.Boolean,System.Boolean,System.Boolean,System.Object)">
 <summary>
 Procedure for populating data into a ListView Object with the current DataReader.
 </summary>
 <param name="lstView">A Valid Listview Object</param>
 <param name="SQLQuery">A Valid SQL SELECT Query Command</param>
 <param name="CreateColumns">Directs the listview object to create new Columns that is equal to the SQL Fields.</param>
 <param name="AutoResize">For the listview to autoresize width.</param>
 <param name="AlternateColors">Directs the listview to change colors alternately</param>
 <param name="AlternateListViewColor">The Color of the listview</param>
 <returns>True=Success, False=Failed</returns>
 <remarks>Accepts SQL SELECT Query only</remarks>
 <example>Obj.fillListview(ListView,"SELECT * FROM TABLE1")</example>
</member>
<member name="M:Ateilla_Personalization_Manager.ClassDataAccessOleDB.FillCombobox(System.Windows.Forms.ComboBox@,System.String)">
 <summary>
 Procedure for populating data into a ComboBox Object with the current DataReader.
 </summary>
 <param name="cmbBox">A Valid ComboBox Object.</param>
 <param name="SQLQuery">A Valid SQL SELECT Query Command.</param>
 <returns>True=Success, False=Failed</returns>
 <remarks>
 Use only SELECT Command with a single field selection<br></br>
 e.g<br></br>
 SELECT Field1 FROM Table1
 </remarks>
 <example>Obj.fillCombobox(ComboBox,"SELECT Field1 FROM Table1")</example>
</member>
<member name="M:Ateilla_Personalization_Manager.ClassDataAccessOleDB.DataTableToListview(System.Windows.Forms.ListView@,System.Data.DataTable@,System.Boolean,System.Boolean,System.Boolean,System.Object)">
 <summary>
 Procedure to populate data into a Listview Object using an existing DataTable Object.
 </summary>
 <param name="lstView">A Valid ListView Object.</param>
 <param name="dTable">A Valid DataTable Object.</param>
 <param name="Header">Copies DataTable Header into ListView Columns.</param>
 <param name="AutoResize">Directs the listview to autoresize.</param>
 <param name="AlternateColors">Directs the listview to change colors alternately</param>
 <param name="AlternateListViewColor">The Color of the listview</param>
 <returns>True=Success, False=Failed</returns>
 <remarks>Accepts SQL SELECT Query only.</remarks>
 <example>Obj.dataTableToListview(ListView,DataTable,True,True)</example>
</member>
<member name="M:Ateilla_Personalization_Manager.ClassDataAccessOleDB.GetFieldNames(System.String)">
 <summary>
 Procedure for populating Table Fields into a String Array.
 </summary>
 <param name="SQLQuery">A Valid SQL SELECT Query Command.</param>
 <returns>An array of string consisting the current fields of a table.</returns>
 <remarks>
 1. Accepts SQL SELECT Query only<br></br>
 2. SELECT Top 1 for optimized performance.
 </remarks>
 <example>Obj.GetFieldNames("SELECT * FROM Table1")</example>
</member>
<member name="M:Ateilla_Personalization_Manager.ClassDataAccessOleDB.ColorListview(System.Windows.Forms.ListView@,System.Drawing.Color)">
 <summary>
 Alternatly draws color to a given ListView Object.
 </summary>
 <param name="lstView">A Valid ListView Object.</param>
 <param name="AlternateColor">Color of the ListView</param>
 <example>Obj.colorListview(ListView,System.Drawing.Color.Blue)</example>
</member>
<member name="M:Ateilla_Personalization_Manager.ClassDataAccessOleDB.Dispose">
 <summary>
 Deconstructor of the object.
 </summary>
 <example>Obj.Dispose()</example>
</member>
<member name="M:Ateilla_Personalization_Manager.ClassDataAccessOleDB.Dispose(System.Boolean)">
 <summary>
 Deconstructing routine of the object.
 </summary>
 <example>Dispose(True)</example>
</member>
<member name="M:Ateilla_Personalization_Manager.ClassEncryption.TripleDesEncryptText(System.String)">
 <summary>
 Encrypts a text using TripleDES Encryption.
 </summary>
 <param name="strText">A Valid String Object.</param>
 <returns>Encrypted Text</returns>
 <remarks>Encryption Key is "baronpogi" without the quotes.</remarks>
</member>
<member name="M:Ateilla_Personalization_Manager.ClassEncryption.TripleDesDecryptText(System.String)">
 <summary>
 Decrypts a text using TripleDes Decryption.
 </summary>
 <param name="strText">A Valid String Object.</param>
 <returns>Decrypted Text</returns>
 <remarks>Decryption Key is "baronpogi" without the quotes.</remarks>
</member>
<member name="M:Ateilla_Personalization_Manager.ClassEncryption.TripleDesEncrypt(System.String,System.String)">
 <summary>
 Procedure for ecrypting text using TripleDes Encryption.
 </summary>
 <param name="strText">A Valid String Object.</param>
 <param name="strEncrKey">A Valid Key for Encryption.</param>
 <returns>Encrypted Text</returns>
</member>
<member name="M:Ateilla_Personalization_Manager.ClassEncryption.TripleDesDecrypt(System.String,System.String)">
 <summary>
 Procedure for decrypting text using TripleDes Dencryption.
 </summary>
 <param name="strText">A Valid String Object.</param>
 <param name="sDecrKey">A Valid Key for Dencryption.</param>
 <returns>Dencrypted Text</returns>
</member>
<member name="M:Ateilla_Personalization_Manager.ClassEncryption.MD5Encrypt(System.String)">
 <summary>
 Encrypts a String using MD5 Encryption.
 </summary>
 <param name="StringToEncrypt">A Valid String Object.</param>
 <returns>Encrypted Text.</returns>
 <remarks>This code doesn't have a decryption procedure.</remarks>
</member>
<member name="M:Ateilla_Personalization_Manager.ClassEncryption.EnDeCrypt(System.String)">
 <summary>
 Procedure for Encrypting and Decrypting a simple text by changing the characters into a special character.
 </summary>
 <param name="StringToEnDecrypt">A Valid String Object.</param>
 <returns>Encrypted or Decrypted text.</returns>
 <remarks>Returns a decrypted text when the parameter is encrypted and vice versa.</remarks>
</member>
</members>
</doc>
